#!/usr/bin/env bash
set -euo pipefail

# ------------------------------
# Usage: sudo ./install-on-pi.sh [--api-key YOUR_WMATA_KEY] [--port 5000] [--simulate 1|0]
# ------------------------------

WMATA_ARG=""
PORT_ARG=""
SIM_ARG=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    --api-key) WMATA_ARG="$2"; shift 2 ;;
    --port)    PORT_ARG="$2"; shift 2 ;;
    --simulate) SIM_ARG="$2"; shift 2 ;;
    *) echo "Unknown arg: $1"; exit 2 ;;
  esac
done

# --- Require sudo ---
if [[ $EUID -ne 0 ]]; then
  echo "Please run with sudo: sudo $0"
  exit 1
fi

# --- Detect user and home ---
RUN_AS="${SUDO_USER:-$(logname 2>/dev/null || whoami)}"
HOME_DIR="$(eval echo ~"$RUN_AS")"
if [[ -z "$RUN_AS" || -z "$HOME_DIR" ]]; then
  echo "Could not resolve installing user."
  exit 1
fi

# --- Resolve repo path ---
SCRIPT_PATH="$(readlink -f "$0")"
APP_DIR="$(dirname "$SCRIPT_PATH")"

# --- Options ---
PORT="${PORT_ARG:-5000}"
METRO_FORCE_SIM="${SIM_ARG:-1}"
WMATA_KEY="${WMATA_ARG:-${WMATA_API_KEY:-}}"
if [[ -z "$WMATA_KEY" ]]; then
  read -rp "Enter your WMATA API key: " WMATA_KEY
fi
if [[ -z "$WMATA_KEY" ]]; then
  echo "WMATA API key is required."
  exit 1
fi

echo "==> Installing Metro Map as service"
echo "==> User: $RUN_AS"
echo "==> App Dir: $APP_DIR"
echo "==> Port: $PORT"
echo "==> Simulation: $METRO_FORCE_SIM"

# --- Install prerequisites ---
apt-get update -y
apt-get install -y python3 python3-venv python3-pip curl ca-certificates

# --- Virtualenv setup ---
sudo -u "$RUN_AS" bash -lc "
  cd '$APP_DIR'
  python3 -m venv .venv || true
  . .venv/bin/activate
  pip install --upgrade pip
  if [[ -f requirements.txt ]]; then
    pip install -r requirements.txt
  else
    pip install flask requests python-dotenv
  fi
"

VENV_PY="$APP_DIR/.venv/bin/python"

# --- Environment file ---
ENV_FILE="/etc/metro-map.env"
cat > "$ENV_FILE" <<EOF
# Auto-generated by install-on-pi.sh
APP_DIR=$APP_DIR
VENV_PY=$VENV_PY
WMATA_API_KEY=$WMATA_KEY
METRO_FORCE_SIM=$METRO_FORCE_SIM
PYTHONUNBUFFERED=1
PORT=$PORT
EOF
chmod 640 "$ENV_FILE"
chown root:root "$ENV_FILE"
echo "==> Created $ENV_FILE"

# --- Systemd service ---
SERVICE_FILE="/etc/systemd/system/metro-map.service"
cat > "$SERVICE_FILE" <<EOF
[Unit]
Description=DC Metro Map LED Display
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=$RUN_AS
EnvironmentFile=$ENV_FILE
WorkingDirectory=$APP_DIR
ExecStart=$VENV_PY app.py
Restart=always
RestartSec=5
Environment=PYTHONUNBUFFERED=1
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=false

[Install]
WantedBy=multi-user.target
EOF

chmod 644 "$SERVICE_FILE"
echo "==> Installed $SERVICE_FILE"

# --- Reload, enable, and start ---
systemctl daemon-reload
systemctl enable metro-map.service
systemctl restart metro-map.service

echo
echo "âœ… Metro Map installed as a system service!"
echo "   Logs:     sudo journalctl -u metro-map -f"
echo "   Status:   sudo systemctl status metro-map"
echo "   URL:      http://$(hostname -I | awk '{print $1}'):$PORT"
echo
echo "Edit $ENV_FILE if you need to change API key or settings, then run:"
echo "   sudo systemctl restart metro-map"
